name: selenium_python_CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11" # Adjust the Python version if needed

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-pytest  # Ensure allure-pytest is installed

      - name: Install Allure CLI
        run: |
          ALLURE_VERSION=2.23.0  # Check Allure's latest release and update if needed
          wget https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.tgz
          tar -zxvf allure-${ALLURE_VERSION}.tgz
          sudo mv allure-${ALLURE_VERSION} /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure

      - name: Run Tests with Allure
        run: |
          python main.py

      - name: Generate Allure Report
        run: |
          allure generate ./reports/allure-results -o ./reports/allure-report --clean
        env:
          CI: true

      - name: Upload Allure Report Artifact
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: ./reports/allure-report

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Allure Report Artifact
        uses: actions/download-artifact@v3
        with:
          name: allure-report
          path: ./reports/allure-report

      - name: Deploy to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_PAGES_TOKEN }}
          publish_dir: ./reports/allure-report
